<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lbl_description.Text" xml:space="preserve">
    <value>İşbu sözleşme ile düzenlenen karşılıklı hak ve yükümlülükler “Barbaros Mahallesi Bahar Sokak, 
Bahar Sitesi A10 Blok Daire 6 ÜSKÜDAR/İSTANBUL” adresinde mukim “MAYAACADEMIA 
HIZLI OKUMA TEKNİKLERİ TİCARET ANONİM ŞİRKETİ” 
(bundan sonra “MayaAcademia A.Ş.” olarak anılacaktır) ile MayaAcademia Nöro Dikkat Windows 
tabanlı uygulamasından sözleşmede belirtilen koşullar dâhilinde yararlanan kullanıcının üyelik kaydını 
tamamladığında bu anlaşmayı okuyup anladığını ve kabul ettiğini elektronik olarak onaylaması ile 
yürürlüğe girer.

MADDE 2-TANIMLAR
Aşağıdaki tanımlamalar, işbu sözleşme kapsamında atıfta bulunulacak tanımlamalar olup, 
açıklanan anlamlar çerçevesinde kullanılacaktır.
2.1. Uygulama: “ITS MY BABY” isimli mobil uygulama, tüm mobil cihazlarda çalışan mobil 
uygulama yazılımını ve bu yazılım ile bağlantılı olarak oluşturulan ürün ve hizmetlerin 
sunulduğu tüm sanal gerçeklik mecralarını ifade etmektedir.
2.2. Kullanıcı/Üye: Uygulamaya işbu sözleşmede belirlenen yöntemlerle kayıt olup uygulama
tarafından sunulan ürün ve hizmetlerden işbu sözleşmede belirtilen koşullar dâhilinde 
yararlanan kişileri ifade etmektedir.
2.3. Alıcı: Uygulamaya işbu sözleşmede belirlenen yöntemlerle kayıt olup uygulama 
tarafından sunulan ürünlerden işbu sözleşmede belirtilen koşullar dâhilinde yararlanan
ve mesafeli satış sözleşmesi kapsamında ürün satın alan kişileri ifade etmektedir.
2.4. Sisteme Erişim Araçları: Kullanıcının hesabını yönetim sayfası, uygulamaya erişim
sağlayan kullanıcı adı,şifre, kod, parola gibi yalnızca Kullanıcının bilgisinde olan bilgileri
ifade etmektedir.
2.5. Hizmetler: ITS MY BABY uygulaması içerisinde kullanıcıların işbu sözleşme içerisinde
tanımlı olan ve sözleşmenin 6. Maddesinde yer alan hizmetleri gerçekleştirmelerini 
sağlamak amacıyla ortaya konulan tüm iş ve işlemleri ifade etmektedir.
2.6. İletişim Kanalları: Anında bildirim, e-posta, sms, mms, telefon ile bildirim gibi iletişim
mecralarını ifade etmektedir.
2.7. Uygulama Bilgilerim Ekranı/ Portal: Kullanıcının uygulama kapsamında yer alan 
hizmetlerden yararlanabilmesi için gerekli işlemleri gerçekleştirebildiği, kişisel bilgilerini ve 
uygulama bazında kendisinden talep edilen bilgilerini girdiği, sadece kullanıcı tarafından
belirlenen kullanıcı adı ve şifre ile erişilebilen kullanıcıya özel web sayfasını ifade etmektedir.
2.8. Kişisel bilgiler/ Gizli Bilgiler: kişi adı/soyadı, adres, telefon numarası, e-posta adresi ve
kullanıcıyı tanımlamaya yönelik her türlü bilgiyi ifade etmektedir.
2.9. Ürün: Kullanıcıların uygulamaya yükledikleri yazılı ve/veya görsel içeriklerden oluşan ve 
kişiye özel tasarlanan albümü ifade etmektedir

MADDE 3- KONU VE KAPSAM
İşbu sözleşmenin konusu; ITS MY BABY uygulamasında mevcut olan ve/veya ileride 
Medizane A.Ş. tarafından sunulacak tüm ürün ve hizmetlerin, bu ürün ve hizmetlerden
yararlanma şartları ile tarafların iş bu sözleşme çerçevesinde karşılıklı hak ve 
yükümlülüklerinin belirlenmesidir.

MADDE 4- ÜYELİK VE KULLANIM ŞARTLARI
4.1. Mobil uygulamadan yararlanmak isteyen kişiler, uygulama bilgilerim ekranında
var olan formu doldurarak ve/veya Facebook hesapları ile bağlanarak uygulamaya 
üye olabilirler." Kullanıcılar,
uygulamaya e-posta/Kullanıcı adı ve şifre ile giriş yapabileceklerdir.
4.2. Reşit olmayan veya tüzel kişi üyeler için tüzel kişiyi temsil ve ilzam etmeye yetkili
olmayan kişiler kanalıyla yapılan başvurular, herhangi bir şekilde tespit edildiği 
takdirde kayıt işlemlerini tamamlamış olsa dahi "Kullanıcının" doğurduğu haklardan
yararlanamazlar. Aksi yöndeki talep ve işlemler ile oluşabilecek zararlar 
Medizane A.Ş.’nin sorumluğunda değildir.
4.3. Uygulamaya üye olabilmek için kullanıcının, Medizane A.Ş. tarafından geçici olarak
üyelikten uzaklaştırılmamış veya üyeliği süresiz olarak yasaklanmamış olması 
gerekmektedir. 
Yukarıda belirtildiği gibi Medizane A.Ş. tarafından işbu sözleşme'nin 5.1. numaralı maddesi
uyarınca geçici olarak üyelikten uzaklaştırılmış veya üyeliği süresiz olarak yasaklanmış olan
kişilerin kayıt işlemlerini tamamlamış olmaları uygulamaya üyelik hakkı kazanma sonucunu
doğurmayacak ve bu nedenle oluşabilecek zararlardan Medizane A.Ş. sorumlu olmayacaktır.
</value>
  </data>
</root>